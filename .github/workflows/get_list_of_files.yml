# workflow which will get list of files changed in PR

#name of workflow
name: Changed files

#event which triggers this workflow
on: 
  workflow_call:
    # Map workflow outputs to job output
    outputs:
      relevantFilesChanged:
        description: "Variable which will store boolean for valid files changed"
        value: ${{ jobs.List_of_files_in_pull_request.outputs.output1 }}

#list of jobs to run
jobs:
    List_of_files_in_pull_request:
        runs-on: ubuntu-latest
        outputs:
          stepOutput: ${{ steps.files_changed.outputs.stepOutput }}
          changedFiles: ${{ steps.files_changed.outputs.list_of_files }}         
          output1: ${{ steps.check_changed_files.outputs.relevantFilesChanged }}
        steps:
          - name: Get code
            uses: actions/checkout@v4
            with:
              ref: ${{ github.head_ref }} #source branch name

          - name: Fetch base branch
            id: base_branch
            run: |
             echo "git fetch ${{ github.base_ref }} --depth=1"
             git fetch origin ${{ github.base_ref }} --depth=1

          - name: List of changed files in PR
            id: files_changed
            run: |
             echo "Getting list of files changed between ${{ github.head_ref }} and origin/${{ github.base_ref }}"
             changed_files=$(git diff --name-only origin/${{ github.base_ref }} ${{ github.head_ref }} | tr '\n' ' ')
             if [ -z "$changed_files" ]; then
              echo "No files changed in the PR. Something wrong in this step."
              exit 1
             fi
             echo "list_of_files=$changed_files" >> "$GITHUB_OUTPUT"
             echo "Changed Files: $changed_files"
             echo "stepOutput=Hello" >> "$GITHUB_OUTPUT"

          - name: Check changed files
            id: check_changed_files
            run: |
             echo "${{ needs.List_of_files_in_pull_request.outputs.stepOutput }}"
             if echo "${{ needs.List_of_files_in_pull_request.outputs.list_of_files }}" | grep "Tests/" || echo "$changed_files" | grep "Validation/.*\.py"; then
              echo "Changes in Tests or Validation libs detected"
              echo 'relevantFilesChanged=true' >> $GITHUB_OUTPUT
             else
              echo "No files changed in Tests or Validation. Will skip other jobs. Exiting"
              echo 'relevantFilesChanged=false' >> $GITHUB_OUTPUT
              exit 0
             fi
           
