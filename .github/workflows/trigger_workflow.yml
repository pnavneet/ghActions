# file which will trigger overall workflow. This will use all internal workflows which are created separately

#name of workflow
name: Main workflow

#event which triggers this workflow
on:
    pull_request:
        branches: [main]
        types: [opened, synchronize]
        #Below ensures that workflow will be triggered only when files from Tests or Validation are present in PR
        paths:
            - 'Tests/*'
            - 'Validation/*'
            - '.github/**'
            - '!Validation/Automation/*'
            - '!Validation/Tools/*'

#list of jobs to run
#Here these two or any more jobs if defined will run in parallel
#So if we need to run them sequentially, may be because we want to check if 1st works or not, then will need to change the flow
#2nd job will run if 1st job is success. And for this, we need to use 'needs' key variable and provide the 1st or previous job (though it can be any job within jobs)
jobs:
    #name of a jobs defined here
    files-in-pr:
        uses: ./.github/workflows/get_list_of_files.yml

    call-pylint-check:
        needs: files-in-pr
        runs-on: ubuntu-latest
        steps:
            - name: Print relevant changes value
              run: |
               echo "Relevant files changed ${{ needs.files-in-pr.outputs.relevantFilesChanged }}" 

            - name: Run pylint
              if: ${{ needs.files-in-pr.outputs.relevantFilesChanged == 'true' }}
              uses: ./.github/workflows/check_pylint.yml

    call-run-system-test:
        needs: call-pylint-check
        uses: ./.github/workflows/run_test.yml
    
